// Code generated by MockGen. DO NOT EDIT.
// Source: rest/internal/token/token.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIToken is a mock of IToken interface
type MockIToken struct {
	ctrl     *gomock.Controller
	recorder *MockITokenMockRecorder
}

// MockITokenMockRecorder is the mock recorder for MockIToken
type MockITokenMockRecorder struct {
	mock *MockIToken
}

// NewMockIToken creates a new mock instance
func NewMockIToken(ctrl *gomock.Controller) *MockIToken {
	mock := &MockIToken{ctrl: ctrl}
	mock.recorder = &MockITokenMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIToken) EXPECT() *MockITokenMockRecorder {
	return m.recorder
}

// Build mocks base method
func (m *MockIToken) Build(method, resourceType, resourcePath, key string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Build", method, resourceType, resourcePath, key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Build indicates an expected call of Build
func (mr *MockITokenMockRecorder) Build(method, resourceType, resourcePath, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Build", reflect.TypeOf((*MockIToken)(nil).Build), method, resourceType, resourcePath, key)
}
