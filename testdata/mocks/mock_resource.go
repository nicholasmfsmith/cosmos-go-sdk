// Code generated by MockGen. DO NOT EDIT.
// Source: cosmos-go-sdk/rest (interfaces: IResource)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIResource is a mock of IResource interface
type MockIResource struct {
	ctrl     *gomock.Controller
	recorder *MockIResourceMockRecorder
}

// MockIResourceMockRecorder is the mock recorder for MockIResource
type MockIResourceMockRecorder struct {
	mock *MockIResource
}

// NewMockIResource creates a new mock instance
func NewMockIResource(ctrl *gomock.Controller) *MockIResource {
	mock := &MockIResource{ctrl: ctrl}
	mock.recorder = &MockIResourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIResource) EXPECT() *MockIResourceMockRecorder {
	return m.recorder
}

// PartitionKey mocks base method
func (m *MockIResource) PartitionKey() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PartitionKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// PartitionKey indicates an expected call of PartitionKey
func (mr *MockIResourceMockRecorder) PartitionKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PartitionKey", reflect.TypeOf((*MockIResource)(nil).PartitionKey))
}

// ResourceType mocks base method
func (m *MockIResource) ResourceType() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResourceType")
	ret0, _ := ret[0].(string)
	return ret0
}

// ResourceType indicates an expected call of ResourceType
func (mr *MockIResourceMockRecorder) ResourceType() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResourceType", reflect.TypeOf((*MockIResource)(nil).ResourceType))
}

// URI mocks base method
func (m *MockIResource) URI() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "URI")
	ret0, _ := ret[0].(string)
	return ret0
}

// URI indicates an expected call of URI
func (mr *MockIResourceMockRecorder) URI() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "URI", reflect.TypeOf((*MockIResource)(nil).URI))
}
